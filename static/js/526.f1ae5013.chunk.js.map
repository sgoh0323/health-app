{"version":3,"file":"static/js/526.f1ae5013.chunk.js","mappings":"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","sources":["pages/exam/index.tsx","../node_modules/@ant-design/icons-svg/es/asn/LeftOutlined.js","../node_modules/@ant-design/icons/es/icons/LeftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/RightOutlined.js","../node_modules/@ant-design/icons/es/icons/RightOutlined.js"],"sourcesContent":["import { CheckCircleFilled, LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport {\r\n    Avatar,\r\n    Button,\r\n    Card,\r\n    Space,\r\n    TextArea,\r\n    Grid,\r\n    DotLoading,\r\n    AutoCenter,\r\n    Steps,\r\n    Divider,\r\n    Form,\r\n    Input,\r\n    Checkbox\r\n} from 'antd-mobile';\r\nimport React, { useRef, useState } from 'react';\r\n\r\nconst Exam = () => {\r\n    const scrollViewRef = useRef(null);\r\n    const [form] = Form.useForm();\r\n    const [examList, setExamList] = useState([\r\n        {\r\n            key: 0,\r\n            q_title: '체질량 지수',\r\n            q_subTitle: '신장과 체중을 입력하여 주시기 바랍니다.',\r\n            a_list: [\r\n                { type: 'input', label: '신장', tail_label: 'cm', name: 'tall', inputType: 'number', idx: 0 },\r\n                { type: 'input', label: '체중', tail_label: 'kg', name: 'weight', inputType: 'number', idx: 0 }\r\n            ]\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '진단질환',\r\n            q_subTitle: '진단받은 질환을 선택하세요',\r\n            a_list: [\r\n                {\r\n                    type: 'checkbox',\r\n                    name: 'meal',\r\n                    multiable: true,\r\n                    options: [\r\n                        { label: '당뇨병', value: 1 },\r\n                        { label: '고혈압', value: 2 },\r\n                        { label: '고지혈증', value: 3 },\r\n                        { label: '비만', value: 4 },\r\n                        { label: '해당사항없음', value: 0 }\r\n                    ]\r\n                }\r\n            ],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        ,\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\r\n            idx: 2\r\n        },\r\n        {\r\n            key: 1,\r\n            q_title: '식습관',\r\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\r\n            a_list: [\r\n                { type: 'checkbox', label: '', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }\r\n            ],\r\n            idx: 2\r\n        }\r\n    ]);\r\n    const [text, setText] = useState('');\r\n    const [current, setCurrent] = useState({\r\n        key: 1,\r\n        q_title: '진단질환',\r\n        q_subTitle: '진단받은 질환을 선택하세요',\r\n        a_list: [\r\n            {\r\n                type: 'checkbox',\r\n                name: 'meal',\r\n                multiable: true,\r\n                options: [\r\n                    { label: '당뇨병', value: 1 },\r\n                    { label: '고혈압', value: 2 },\r\n                    { label: '고지혈증', value: 3 },\r\n                    { label: '비만', value: 4 },\r\n                    { label: '해당사항없음', value: 0 }\r\n                ]\r\n            }\r\n        ],\r\n        idx: 2\r\n    });\r\n    return (\r\n        <>\r\n            <div style={{ textAlign: 'center' }}>\r\n                모든항목을 빠짐없이 입력할수록\r\n                <br /> 보다 정확한 분석 결과를 받으실수 있습니다.\r\n            </div>\r\n            <Steps current={current.key}>\r\n                {examList.map((i, index) => {\r\n                    // return <Steps.Step icon={index === current ? <CheckCircleFilled /> : undefined} />;\r\n                    return <Steps.Step />;\r\n                })}\r\n            </Steps>\r\n            <Card>\r\n                <AutoCenter>\r\n                    <div>{current.q_title}</div>\r\n                </AutoCenter>\r\n                <AutoCenter>\r\n                    <div>{current.q_subTitle}</div>\r\n                </AutoCenter>\r\n                <Divider />\r\n                <Form form={form}>\r\n                    <div>\r\n                        {current.a_list.length > 0 &&\r\n                            current.a_list.map(i => {\r\n                                const rsElement = el => {\r\n                                    if (el.type === 'input') {\r\n                                        return (\r\n                                            <Form.Item\r\n                                                name={el.name}\r\n                                                label={el.label}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}>\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                        );\r\n                                    } else if (el.type === 'checkbox') {\r\n                                        return (\r\n                                            <Form.Item\r\n                                                name={el.name}\r\n                                                label={el.label}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true\r\n                                                    }\r\n                                                ]}>\r\n                                                <Checkbox.Group>\r\n                                                    <Space direction=\"vertical\">\r\n                                                        {el.options.map(e => {\r\n                                                            return <Checkbox value={e.value}>{e.label} </Checkbox>;\r\n                                                        })}\r\n                                                    </Space>\r\n                                                </Checkbox.Group>\r\n                                            </Form.Item>\r\n                                        );\r\n                                    }\r\n                                };\r\n                                return rsElement(i);\r\n                            })}\r\n                    </div>\r\n                </Form>\r\n            </Card>\r\n            <Space justify=\"between\" style={{ width: '100%', marginTop: '10px' }}>\r\n                <Button>\r\n                    <LeftOutlined />\r\n                    이전\r\n                </Button>\r\n                <Button>\r\n                    다음\r\n                    <RightOutlined />\r\n                </Button>\r\n            </Space>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Exam;\r\n","// This icon file is generated automatically.\nvar LeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\" } }] }, \"name\": \"left\", \"theme\": \"outlined\" };\nexport default LeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftOutlined = function LeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LeftOutlinedSvg\n  }));\n};\n\nLeftOutlined.displayName = 'LeftOutlined';\nexport default /*#__PURE__*/React.forwardRef(LeftOutlined);","// This icon file is generated automatically.\nvar RightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z\" } }] }, \"name\": \"right\", \"theme\": \"outlined\" };\nexport default RightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RightOutlinedSvg from \"@ant-design/icons-svg/es/asn/RightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RightOutlined = function RightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RightOutlinedSvg\n  }));\n};\n\nRightOutlined.displayName = 'RightOutlined';\nexport default /*#__PURE__*/React.forwardRef(RightOutlined);"],"names":["useRef","Form","form","useState","key","q_title","q_subTitle","a_list","type","label","tail_label","name","inputType","idx","multiable","options","value","examList","current","style","textAlign","map","i","index","Step","length","el","rules","required","direction","e","justify","width","marginTop","LeftOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LeftOutlinedSvg","displayName","RightOutlined","RightOutlinedSvg"],"sourceRoot":""}