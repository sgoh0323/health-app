{"version":3,"file":"static/js/460.80250c59.chunk.js","mappings":"0MAEA,EADuB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,ioBAAqoB,KAAQ,WAAY,MAAS,Y,WCM5zBA,EAAmB,SAA0BC,EAAOC,GACtD,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,IAAcA,EAAAA,EAAAA,GAAc,GAAIJ,GAAQ,GAAI,CAC5FC,IAAKA,EACLI,KAAMC,MAIVP,EAAiBQ,YAAc,mBAC/B,MAA4BL,EAAAA,WAAiBH,GCuB7C,MApCA,SAA4BC,GAC1B,OAAoBE,EAAAA,cAAoB,MAAOM,OAAOC,OAAO,CAC3DC,MAAO,MACPC,OAAQ,MACRC,QAAS,YACTC,MAAO,6BACPC,WAAY,gCACXd,EAAO,CACRe,MAAOP,OAAOC,OAAO,CACnBO,cAAe,YACdhB,EAAMe,OACTE,UAAW,CAAC,mBAAoBjB,EAAMiB,WAAWC,OAAOC,SAASC,KAAK,OACvDlB,EAAAA,cAAoB,QAAS,KAAM,2CAAyDA,EAAAA,cAAoB,IAAK,CACpImB,GAAI,wCACJC,OAAQ,OACRC,YAAa,EACbC,KAAM,OACNC,SAAU,WACIvB,EAAAA,cAAoB,IAAK,CACvCmB,GAAI,mCACUnB,EAAAA,cAAoB,OAAQ,CAC1CmB,GAAI,kCACJG,KAAM,UACNE,QAAS,EACTC,EAAG,EACHC,EAAG,EACHlB,MAAO,GACPC,OAAQ,KACOT,EAAAA,cAAoB,OAAQ,CAC3C2B,EAAG,utEACHR,GAAI,8CACJG,KAAM,eACNC,SAAU,gB,oDCqNd,EAlOa,YACaK,EAAAA,EAAAA,QAAO,MAA7B,IACA,GAAsBC,EAAAA,EAAAA,UAAS,IAA/B,eAAOC,EAAP,KAAYC,EAAZ,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,CACrC,CAAEK,KAAM,4DAA+BC,KAAM,MAAOC,KAAM,uBAC1D,CACIF,KAAM,wCACNC,KAAM,OACNC,KAAM,uBAEV,CACIF,KAAM,qNACNC,KAAM,MACNC,KAAM,yBAVd,eAAOC,EAAP,KAAiBC,EAAjB,KAaA,GAAwBT,EAAAA,EAAAA,UAAS,IAAjC,yBAmDA,OACI,iCACI,iBAAKhB,MAAO,CAAEL,MAAO,QAArB,UACK6B,EAASE,KAAI,SAACC,EAAGC,GACd,OACI,8BACgB,QAAXD,EAAEL,MACC,UAAC,KAAD,CAAMO,QAAS,EAAGC,IAAK,EAAG9B,MAAO,CAAE+B,QAAS,OAAQC,OAAQ,IAA5D,WACI,SAAC,KAAD,CAAQC,IAAI,GAAGjC,MAAO,CAAE,SAAU,WAClC,SAAC,KAAD,CACIA,MAAO,CACHkC,WAAY,IACZC,SAAU,sBACVC,aAAc,YAJtB,UAMI,gBAAKC,wBAAyB,CAAEC,OAAM,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAGN,WAE/C,SAAC,IAAD,CAAOkB,MAAM,MAAb,UACI,yBAAMC,GAAAA,CAAM,OAACb,QAAD,IAACA,OAAD,EAACA,EAAGJ,MAAMkB,OAAO,oBAuBrC,iBACIzC,MAAO,CACH+B,QAAS,OACTC,OAAQ,GACRU,eAAgB,MAChBN,aAAc,YALtB,WAQI,SAAC,IAAD,CAAOG,MAAM,MAAb,UACI,yBAAMC,GAAAA,CAAM,OAACb,QAAD,IAACA,OAAD,EAACA,EAAGJ,MAAMkB,OAAO,iBAEjC,SAAC,KAAD,CACIzC,MAAO,CACH2C,WAAY,EACZT,WAAY,IACZvC,MAAO,eACPwC,SAAU,sBACVS,gBAAiB,WANzB,gBAQKjB,QARL,IAQKA,OARL,EAQKA,EAAGN,eAS3BF,IACG,UAAC,KAAD,CAAMU,QAAS,EAAGC,IAAK,EAAG9B,MAAO,CAAE+B,QAAS,OAAQC,OAAQ,IAA5D,WACI,SAAC,KAAD,CAAQC,IAAI,GAAGjC,MAAO,CAAE,SAAU,WAClC,SAAC,KAAD,CACIA,MAAO,CACHkC,WAAY,IACZC,SAAU,sBACVS,gBAAiB,UACjBR,aAAc,YALtB,UAOI,iBAAMpC,MAAO,CAAE6C,SAAU,IAAzB,UACI,SAAC,KAAD,YAiBhB,SAAC,KAAD,CAAMC,GAAG,OAAT,UACI,SAAC,KAAD,CACIC,KAAK,IACLC,SAAS,IACThD,MAAO,CACH,4BAA6B,OAC7B,2BAA4B,OAC5B,kBAAmB,QAN3B,UAQI,SAAC,EAAD,CAAkBA,MAAO,CAAE6C,SAAU,eAG7C,SAAC,KAAD,CACIE,KAAK,IACLC,SAAS,IACThD,MAAO,CACH,4BAA6B,OAC7B,0BAA2B,OAC3B,kBAAmB,OACnB,eAAgB,SAEpBiD,QAxKA,WACZC,EAAAA,GAAAA,QAAc,CACVC,MAAO,6EACPC,QAAS,oHACTC,UAAW,WAEPC,SAASC,SAASC,KAAO,WAE7BC,YAAa,eACbC,WAAY,kBAsJR,UAUI,SAAC,EAAD,CAAoB1D,MAAO,CAAE6C,SAAU,OAAQc,MAAO,gBAI9D,gBAAKzD,UAAU,sBAAf,UACI,iBACIF,MAAO,CACH+B,QAAS,OACT6B,QAAS,MACThB,gBAAiB,SAJzB,WAMI,SAAC,KAAD,CACIiB,YAAY,iEACZC,KAAM,EACNC,SAAU,CAAEC,QAAS,EAAGC,QAAS,GACjCjE,MAAO,CACHkE,UAAW,GACXvE,MAAO,sBACPiD,gBAAiB,QACjBuB,UAAW,UAEfC,MAAOnD,EACPoD,SAAU,SAAAC,GACNpD,EAAOoD,OAGf,SAAC,KAAD,CACIX,MAAM,UACNY,KAAK,OACLvE,MAAO,CAAEwE,aAAc,EAAG7E,MAAO,QACjCsD,QAxLA,WAChB7B,GAAa,GACb,IAAMqD,EAAU,kBACTjD,GADS,CAEZ,CACIH,KAAMJ,EACNK,KAAM,OACNC,KAAM,yBAGdE,EAAYgD,GACZvD,EAAO,IAYPwD,YAAW,WACPtD,GAAa,GACbK,EAAY,GAAD,eACJgD,GADI,CAEP,CACIpD,KAAM,kBAAUJ,EAChBK,KAAM,MACNC,KAAM,4BAGf,MAmJS,mC,sBC3NpB,GAAeoD,E,SAAAA,KARD,SAAC,GAA2B,IAAzBpB,EAAwB,EAAxBA,SAIPqB,GAJ+B,EAAdC,QAIVC,EAAAA,EAAMvB,EAASwB,WAC5B,OAAO,SAAC,IAAD,CAAQH,KAAMA,EAAMI,UAAU,SAAC,EAAD","sources":["../node_modules/@ant-design/icons-svg/es/asn/QuestionOutlined.js","../node_modules/@ant-design/icons/es/icons/QuestionOutlined.js","../node_modules/antd-mobile-icons/es/UserContactOutline.js","pages/ChatBot/content.tsx","pages/ChatBot/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar QuestionOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M764 280.9c-14-30.6-33.9-58.1-59.3-81.6C653.1 151.4 584.6 125 512 125s-141.1 26.4-192.7 74.2c-25.4 23.6-45.3 51-59.3 81.7-14.6 32-22 65.9-22 100.9v27c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-27c0-99.5 88.6-180.4 197.6-180.4s197.6 80.9 197.6 180.4c0 40.8-14.5 79.2-42 111.2-27.2 31.7-65.6 54.4-108.1 64-24.3 5.5-46.2 19.2-61.7 38.8a110.85 110.85 0 00-23.9 68.6v31.4c0 6.2 5 11.2 11.2 11.2h54c6.2 0 11.2-5 11.2-11.2v-31.4c0-15.7 10.9-29.5 26-32.9 58.4-13.2 111.4-44.7 149.3-88.7 19.1-22.3 34-47.1 44.3-74 10.7-27.9 16.1-57.2 16.1-87 0-35-7.4-69-22-100.9zM512 787c-30.9 0-56 25.1-56 56s25.1 56 56 56 56-25.1 56-56-25.1-56-56-56z\" } }] }, \"name\": \"question\", \"theme\": \"outlined\" };\nexport default QuestionOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport QuestionOutlinedSvg from \"@ant-design/icons-svg/es/asn/QuestionOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar QuestionOutlined = function QuestionOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: QuestionOutlinedSvg\n  }));\n};\n\nQuestionOutlined.displayName = 'QuestionOutlined';\nexport default /*#__PURE__*/React.forwardRef(QuestionOutlined);","import * as React from \"react\";\n\nfunction UserContactOutline(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 48 48\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\"\n  }, props, {\n    style: Object.assign({\n      verticalAlign: '-0.125em'\n    }, props.style),\n    className: ['antd-mobile-icon', props.className].filter(Boolean).join(' ')\n  }), /*#__PURE__*/React.createElement(\"title\", null, \"74D2942F-F587-4E41-9900-AC83B1D81A6A@2x\"), /*#__PURE__*/React.createElement(\"g\", {\n    id: \"UserContactOutline-UserContactOutline\",\n    stroke: \"none\",\n    strokeWidth: 1,\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    id: \"UserContactOutline-\\u7F16\\u7EC4\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"UserContactOutline-\\u77E9\\u5F62\",\n    fill: \"#FFFFFF\",\n    opacity: 0,\n    x: 0,\n    y: 0,\n    width: 48,\n    height: 48\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M24.5,4 C30.0112644,4 34.479027,8.46775399 34.479027,13.9790078 L34.479027,18.0209922 C34.479027,21.7144498 32.4724515,24.9392476 29.4899594,26.6647285 L29.4895135,27 L40.4649873,32.8658886 C42.8766161,34.1547938 44.2604463,36.7822067 43.9591026,39.5 C43.6750656,42.0617054 41.5099747,44 38.9325658,44 L10.0674342,44 C7.49002529,44 5.32493441,42.0617054 5.04089744,39.5 C4.73955374,36.7822067 6.12338392,34.1547938 8.53501271,32.8658886 L19.5104865,27 L19.5100406,26.6647285 C16.5275485,24.9392476 14.520973,21.7144498 14.520973,18.0209922 L14.520973,13.9790078 C14.520973,8.46775399 18.9887356,4 24.5,4 Z M24.5,7 C20.7258932,7 17.6514878,9.9957724 17.5250256,13.7390798 L17.5209788,13.9790078 L17.5209788,18.0209922 C17.5209788,20.4528116 18.7728519,22.6635411 20.7856095,23.9310701 L21.0123556,24.0679885 L22.3083607,24.817775 C22.4317831,24.8891793 22.5078628,25.0208861 22.5080524,25.1634751 L22.5125654,28.5568164 C22.512762,28.7046068 22.4314515,28.8404631 22.3011089,28.9101252 L9.94909066,35.5117138 C8.6194532,36.2223442 7.85648652,37.670953 8.0226306,39.1693924 C8.13239999,40.1593932 8.93277672,40.9205158 9.91149276,40.9941531 L10.0674342,41 L38.9325658,41 C39.9810601,41 40.8618227,40.2114985 40.9773694,39.1693924 C41.1359615,37.7390639 40.4479878,36.3541389 39.2286771,35.6131276 L39.0509093,35.5117138 L26.6988911,28.9101252 C26.5685485,28.8404631 26.487238,28.7046068 26.4874346,28.5568164 L26.4919476,25.1634751 C26.4921372,25.0208861 26.5682169,24.8891793 26.6916393,24.817775 L27.9876444,24.0679885 C30.0560904,22.8713167 31.3818366,20.7046996 31.4738944,18.2902478 L31.4790212,18.0209922 L31.4790212,13.9790078 C31.4790212,10.1246082 28.354407,7 24.5,7 Z M43.6,23 C43.8209139,23 44,23.1790861 44,23.4 L44,25.6 C44,25.8209139 43.8209139,26 43.6,26 L40.4,26 C40.1790861,26 40,25.8209139 40,25.6 L40,23.4 C40,23.1790861 40.1790861,23 40.4,23 L43.6,23 Z M43.6,17 C43.8209139,17 44,17.1790861 44,17.4 L44,19.6 C44,19.8209139 43.8209139,20 43.6,20 L37.4,20 C37.1790861,20 37,19.8209139 37,19.6 L37,17.4 C37,17.1790861 37.1790861,17 37.4,17 L43.6,17 Z M43.6,11 C43.8209139,11 44,11.1790861 44,11.4 L44,13.6 C44,13.8209139 43.8209139,14 43.6,14 L37.4,14 C37.1790861,14 37,13.8209139 37,13.6 L37,11.4 C37,11.1790861 37.1790861,11 37.4,11 L43.6,11 Z\",\n    id: \"UserContactOutline-\\u5F62\\u72B6\\u7ED3\\u5408\",\n    fill: \"currentColor\",\n    fillRule: \"nonzero\"\n  }))));\n}\n\nexport default UserContactOutline;","import { MessageFilled, QuestionCircleOutlined, QuestionOutlined } from '@ant-design/icons';\nimport { UserContactOutline } from 'antd-mobile-icons';\nimport {\n    Avatar,\n    Button,\n    Card,\n    Space,\n    TextArea,\n    Grid,\n    DotLoading,\n    FloatingBubble,\n    Popup,\n    Modal,\n    Toast\n} from 'antd-mobile';\nimport { ReactTinyLink } from 'react-tiny-link';\nimport React, { useRef, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { getDirectQuestions } from 'api/testApi';\n\nconst Chat = () => {\n    const scrollViewRef = useRef(null);\n    const [msg, setMsg] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [textList, setTextList] = useState([\n        { text: '<a>건강상태 질문</a><tag>aa</tag>', type: 'bot', date: '2022-05-15 17:52:32' },\n        {\n            text: '건강상태 대답',\n            type: 'user',\n            date: '2022-05-15 17:52:32'\n        },\n        {\n            text: '건강상태에 따른 챗봇에 대화가 이루어 집니다.\\n챗봇에 대답은 지연될수있습니다. ',\n            type: 'bot',\n            date: '2022-05-15 17:52:32'\n        }\n    ]);\n    const [text, setText] = useState('');\n    const onClick = () => {\n        Modal.confirm({\n            title: '상담사를 연결하시겠습니까?',\n            content: '상담내용은 녹음되거나 활용될 수 있습니다.',\n            onConfirm: () => {\n                // 차후 상담원 번호로 대체\n                document.location.href = 'tel:114';\n            },\n            confirmText: '확인',\n            cancelText: '취소'\n        });\n    };\n    const getRandomArbitrary = (min, max) => {\n        return Math.random() * (max - min) + min;\n    };\n    const sendMessage = () => {\n        setIsLoading(true);\n        const tmpMsgList = [\n            ...textList,\n            {\n                text: msg,\n                type: 'user',\n                date: '2022-05-15 17:52:32'\n            }\n        ];\n        setTextList(tmpMsgList);\n        setMsg('');\n        // getDirectQuestions({ message: msg, sender: getRandomArbitrary(1000, 9999) }, data => {\n        //     setIsLoading(false);\n        //     setTextList([\n        //         ...tmpMsgList,\n        //         {\n        //             text: data,\n        //             type: 'bot',\n        //             date: '2022-05-15 17:52:32'\n        //         }\n        //     ]);\n        // });\n        setTimeout(() => {\n            setIsLoading(false);\n            setTextList([\n                ...tmpMsgList,\n                {\n                    text: '대답 : ' + msg,\n                    type: 'bot',\n                    date: '2022-05-15 17:52:32'\n                }\n            ]);\n        }, 1000);\n    };\n    return (\n        <>\n            <div style={{ width: '100%' }}>\n                {textList.map((i, index) => {\n                    return (\n                        <>\n                            {i.type === 'bot' ? (\n                                <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                                    <Avatar src=\"\" style={{ '--size': '46px' }} />\n                                    <Card\n                                        style={{\n                                            fontWeight: 600,\n                                            maxWidth: 'calc( 100% - 150px)',\n                                            overflowWrap: 'anywhere'\n                                        }}>\n                                        <div dangerouslySetInnerHTML={{ __html: i?.text }}></div>\n                                    </Card>\n                                    <Space align=\"end\">\n                                        <div>{moment(i?.date).format('HH:mm:ss')}</div>\n                                    </Space>\n                                </Grid>\n                            ) : (\n                                // <Grid\n                                //     columns={1}\n                                //     gap={3}\n                                //     style={{\n                                //         display: 'flex',\n                                //         margin: 10,\n                                //         justifyContent: 'end',\n                                //         overflowWrap: 'anywhere',\n                                //         textAlign: 'end'\n                                //     }}>\n                                //     <Card\n                                //         style={{\n                                //             fontWeight: 600,\n                                //             maxWidth: 'calc( 100% - 150px)',\n                                //             backgroundColor: '#1677ff'\n                                //         }}>\n                                //         {i?.text}\n                                //     </Card>\n                                // </Grid>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        margin: 10,\n                                        justifyContent: 'end',\n                                        overflowWrap: 'anywhere'\n                                        // maxWidth: 'calc( 100% - 150px)'\n                                    }}>\n                                    <Space align=\"end\">\n                                        <div>{moment(i?.date).format('HH:mm:ss')}</div>\n                                    </Space>\n                                    <Card\n                                        style={{\n                                            marginLeft: 5,\n                                            fontWeight: 600,\n                                            width: 'fit-contents',\n                                            maxWidth: 'calc( 100% - 150px)',\n                                            backgroundColor: '#1677ff'\n                                        }}>\n                                        {i?.text}\n                                    </Card>\n                                </div>\n                                // <Space justify={'end'} style={{ width: '100%', marginTop: '10px' }}>\n                                // </Space>\n                            )}\n                        </>\n                    );\n                })}\n                {isLoading && (\n                    <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                        <Avatar src=\"\" style={{ '--size': '46px' }} />\n                        <Card\n                            style={{\n                                fontWeight: 600,\n                                maxWidth: 'calc( 100% - 150px)',\n                                backgroundColor: '#1677ff',\n                                overflowWrap: 'anywhere'\n                            }}>\n                            <span style={{ fontSize: 14 }}>\n                                <DotLoading />\n                            </span>\n                        </Card>\n                    </Grid>\n                )}\n                {/* <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                    <Avatar src=\"\" style={{ '--size': '46px' }} />\n                    <Card style={{ fontWeight: 600, maxWidth: 'calc( 100% - 150px)' }}>\n                        <ReactTinyLink\n                            cardSize=\"small\"\n                            showGraphic={true}\n                            maxLine={2}\n                            minLine={1}\n                            url=\"https://andrewandco.co.kr/surl/P/496/?cafe_mkt=ue_1019_secret_pc&NaPm=ci%3D5hlelMmjmJSKqVuwLGlTolrA%7Ctr%3Dgfa%7Cct%3Dl39w2jcg%7Chk%3D5a8f8afd7fe79fe4198af35aaf829794975d14de\"\n                        />\n                    </Card>\n                </Grid> */}\n                <Link to=\"/faq\">\n                    <FloatingBubble\n                        axis=\"x\"\n                        magnetic=\"x\"\n                        style={{\n                            '--initial-position-bottom': '50px',\n                            '--initial-position-right': '10px',\n                            '--edge-distance': '24px'\n                        }}>\n                        <QuestionOutlined style={{ fontSize: '26px' }} />\n                    </FloatingBubble>\n                </Link>\n                <FloatingBubble\n                    axis=\"x\"\n                    magnetic=\"x\"\n                    style={{\n                        '--initial-position-bottom': '50px',\n                        '--initial-position-left': '10px',\n                        '--edge-distance': '24px',\n                        '--background': 'white'\n                    }}\n                    onClick={onClick}>\n                    <UserContactOutline style={{ fontSize: '26px', color: 'gray' }} />\n                </FloatingBubble>\n            </div>\n\n            <div className=\"aimmed_chat_textbox\">\n                <div\n                    style={{\n                        display: 'flex',\n                        padding: '6px',\n                        backgroundColor: 'white'\n                    }}>\n                    <TextArea\n                        placeholder=\"문의사항을 입력하세요.\"\n                        rows={1}\n                        autoSize={{ minRows: 1, maxRows: 5 }}\n                        style={{\n                            minHeight: 24,\n                            width: 'calc( 100% - 80px )',\n                            backgroundColor: 'white',\n                            overflowY: 'hidden'\n                        }}\n                        value={msg}\n                        onChange={e => {\n                            setMsg(e);\n                        }}\n                    />\n                    <Button\n                        color=\"primary\"\n                        size=\"mini\"\n                        style={{ borderRadius: 0, width: '80px' }}\n                        onClick={sendMessage}>\n                        전송\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Template } from 'components';\nimport LoginContent from './content';\nimport { menus } from 'router/menu';\nimport Layout from 'layout';\nimport { withRouter } from 'react-router-dom';\n\nconst Login = ({ location, history }) => {\n    const Header = {\n        title: 'aimmed App'\n    };\n    const item = menus[location.pathname];\n    return <Layout item={item} contents={<LoginContent />} />;\n};\n\nexport default withRouter(Login);\n"],"names":["QuestionOutlined","props","ref","React","AntdIcon","_objectSpread","icon","QuestionOutlinedSvg","displayName","Object","assign","width","height","viewBox","xmlns","xmlnsXlink","style","verticalAlign","className","filter","Boolean","join","id","stroke","strokeWidth","fill","fillRule","opacity","x","y","d","useRef","useState","msg","setMsg","isLoading","setIsLoading","text","type","date","textList","setTextList","map","i","index","columns","gap","display","margin","src","fontWeight","maxWidth","overflowWrap","dangerouslySetInnerHTML","__html","align","moment","format","justifyContent","marginLeft","backgroundColor","fontSize","to","axis","magnetic","onClick","Modal","title","content","onConfirm","document","location","href","confirmText","cancelText","color","padding","placeholder","rows","autoSize","minRows","maxRows","minHeight","overflowY","value","onChange","e","size","borderRadius","tmpMsgList","setTimeout","withRouter","item","history","menus","pathname","contents"],"sourceRoot":""}