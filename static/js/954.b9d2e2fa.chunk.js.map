{"version":3,"file":"static/js/954.b9d2e2fa.chunk.js","mappings":"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","sources":["pages/ChatBot/content.tsx","pages/ChatBot/index.tsx"],"sourcesContent":["import { MessageFilled, QuestionCircleOutlined, QuestionOutlined } from '@ant-design/icons';\nimport { UserContactOutline } from 'antd-mobile-icons';\nimport {\n    Avatar,\n    Button,\n    Card,\n    Space,\n    TextArea,\n    Grid,\n    DotLoading,\n    FloatingBubble,\n    Popup,\n    Modal,\n    Toast\n} from 'antd-mobile';\nimport { ReactTinyLink } from 'react-tiny-link';\nimport React, { useRef, useState } from 'react';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { getDirectQuestions } from 'api/testApi';\n\nconst Chat = () => {\n    const scrollViewRef = useRef(null);\n    const [msg, setMsg] = useState('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [textList, setTextList] = useState([\n        { text: '안녕하세요 000님, 무엇을 도와드릴까요?', type: 'bot', date: '2022-05-15 17:52:32' },\n        {\n            text: '이상지질혈증에 대해 궁금한 점이 있습니다.',\n            type: 'user',\n            date: '2022-05-15 17:53:32'\n        },\n        {\n            text: '어떤 점이 궁금하신가요?',\n            type: 'bot',\n            date: '2022-05-15 17:53:33'\n        },\n        {\n            text: 'HDL콜레스테롤 수치는 감소하면 위험한가요?',\n            type: 'user',\n            date: '2022-05-15 17:54:01'\n        },\n        {\n            text: 'HDL콜레스테롤은 40mg/dl 미만이면 낮은 것으로 판단하며, 혈액 내 HDL콜레스테롤 수치는 높을수록 동맥경화를 예방할 수 있어 좋은 콜레스테롤로 알려져 있습니다.',\n            type: 'bot',\n            date: '2022-05-15 17:54:03'\n        }\n    ]);\n    const [text, setText] = useState('');\n    const onClick = () => {\n        Modal.confirm({\n            title: '상담사를 연결하시겠습니까?',\n            content: '상담내용은 녹음되거나 활용될 수 있습니다.',\n            onConfirm: () => {\n                // 차후 상담원 번호로 대체\n                document.location.href = 'tel:114';\n            },\n            confirmText: '확인',\n            cancelText: '취소'\n        });\n    };\n    const getRandomArbitrary = (min, max) => {\n        return Math.random() * (max - min) + min;\n    };\n    const sendMessage = () => {\n        setIsLoading(true);\n        const tmpMsgList = [\n            ...textList,\n            {\n                text: msg,\n                type: 'user',\n                date: moment().format('YYYY-MM-DD HH:mm:ss')\n            }\n        ];\n        setTextList(tmpMsgList);\n        setMsg('');\n        // getDirectQuestions({ message: msg, sender: getRandomArbitrary(1000, 9999) }, data => {\n        //     setIsLoading(false);\n        //     setTextList([\n        //         ...tmpMsgList,\n        //         {\n        //             text: data,\n        //             type: 'bot',\n        //             date: '2022-05-15 17:52:32'\n        //         }\n        //     ]);\n        // });\n        setTimeout(() => {\n            setIsLoading(false);\n            setTextList([\n                ...tmpMsgList,\n                {\n                    text: '대답 : ' + msg,\n                    type: 'bot',\n                    date: moment().format('YYYY-MM-DD HH:mm:ss')\n                }\n            ]);\n        }, 1000);\n    };\n    return (\n        <>\n            <div style={{ width: '100%' }}>\n                {textList.map((i, index) => {\n                    return (\n                        <>\n                            {i.type === 'bot' ? (\n                                <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                                    <Avatar src=\"\" style={{ '--size': '46px' }} />\n                                    <Card\n                                        style={{\n                                            fontWeight: 600,\n                                            maxWidth: 'calc( 100% - 150px)',\n                                            overflowWrap: 'anywhere'\n                                        }}>\n                                        <div dangerouslySetInnerHTML={{ __html: i?.text }}></div>\n                                    </Card>\n                                    <Space align=\"end\">\n                                        <div>{moment(i?.date).format('HH:mm:ss')}</div>\n                                    </Space>\n                                </Grid>\n                            ) : (\n                                // <Grid\n                                //     columns={1}\n                                //     gap={3}\n                                //     style={{\n                                //         display: 'flex',\n                                //         margin: 10,\n                                //         justifyContent: 'end',\n                                //         overflowWrap: 'anywhere',\n                                //         textAlign: 'end'\n                                //     }}>\n                                //     <Card\n                                //         style={{\n                                //             fontWeight: 600,\n                                //             maxWidth: 'calc( 100% - 150px)',\n                                //             backgroundColor: '#1677ff'\n                                //         }}>\n                                //         {i?.text}\n                                //     </Card>\n                                // </Grid>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        margin: 10,\n                                        justifyContent: 'end',\n                                        overflowWrap: 'anywhere'\n                                        // maxWidth: 'calc( 100% - 150px)'\n                                    }}>\n                                    <Space align=\"end\">\n                                        <div>{moment(i?.date).format('HH:mm:ss')}</div>\n                                    </Space>\n                                    <Card\n                                        style={{\n                                            marginLeft: 5,\n                                            fontWeight: 600,\n                                            width: 'fit-contents',\n                                            maxWidth: 'calc( 100% - 150px)',\n                                            backgroundColor: '#1677ff'\n                                        }}>\n                                        {i?.text}\n                                    </Card>\n                                </div>\n                                // <Space justify={'end'} style={{ width: '100%', marginTop: '10px' }}>\n                                // </Space>\n                            )}\n                        </>\n                    );\n                })}\n                {isLoading && (\n                    <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                        <Avatar src=\"\" style={{ '--size': '46px' }} />\n                        <Card\n                            style={{\n                                fontWeight: 600,\n                                maxWidth: 'calc( 100% - 150px)',\n                                backgroundColor: '#1677ff',\n                                overflowWrap: 'anywhere'\n                            }}>\n                            <span style={{ fontSize: 14 }}>\n                                <DotLoading />\n                            </span>\n                        </Card>\n                    </Grid>\n                )}\n                {/* <Grid columns={1} gap={5} style={{ display: 'flex', margin: 10 }}>\n                    <Avatar src=\"\" style={{ '--size': '46px' }} />\n                    <Card style={{ fontWeight: 600, maxWidth: 'calc( 100% - 150px)' }}>\n                        <ReactTinyLink\n                            cardSize=\"small\"\n                            showGraphic={true}\n                            maxLine={2}\n                            minLine={1}\n                            url=\"https://andrewandco.co.kr/surl/P/496/?cafe_mkt=ue_1019_secret_pc&NaPm=ci%3D5hlelMmjmJSKqVuwLGlTolrA%7Ctr%3Dgfa%7Cct%3Dl39w2jcg%7Chk%3D5a8f8afd7fe79fe4198af35aaf829794975d14de\"\n                        />\n                    </Card>\n                </Grid> */}\n                <Link to=\"/faq\">\n                    <FloatingBubble\n                        axis=\"x\"\n                        magnetic=\"x\"\n                        style={{\n                            '--initial-position-bottom': '50px',\n                            '--initial-position-right': '10px',\n                            '--edge-distance': '24px'\n                        }}>\n                        <QuestionOutlined style={{ fontSize: '26px' }} />\n                    </FloatingBubble>\n                </Link>\n                <FloatingBubble\n                    axis=\"x\"\n                    magnetic=\"x\"\n                    style={{\n                        '--initial-position-bottom': '50px',\n                        '--initial-position-left': '10px',\n                        '--edge-distance': '24px',\n                        '--background': 'white'\n                    }}\n                    onClick={onClick}>\n                    <UserContactOutline style={{ fontSize: '26px', color: 'gray' }} />\n                </FloatingBubble>\n            </div>\n\n            <div className=\"aimmed_chat_textbox\">\n                <div\n                    style={{\n                        display: 'flex',\n                        padding: '6px',\n                        backgroundColor: 'white'\n                    }}>\n                    <TextArea\n                        placeholder=\"문의사항을 입력하세요.\"\n                        rows={1}\n                        autoSize={{ minRows: 1, maxRows: 5 }}\n                        style={{\n                            minHeight: 24,\n                            width: 'calc( 100% - 80px )',\n                            backgroundColor: 'white',\n                            overflowY: 'hidden'\n                        }}\n                        value={msg}\n                        onChange={e => {\n                            setMsg(e);\n                        }}\n                    />\n                    <Button\n                        color=\"primary\"\n                        size=\"mini\"\n                        style={{ borderRadius: 0, width: '80px' }}\n                        onClick={sendMessage}>\n                        전송\n                    </Button>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Chat;\n","import React from 'react';\nimport { Template } from 'components';\nimport LoginContent from './content';\nimport { menus } from 'router/menu';\nimport Layout from 'layout';\nimport { withRouter } from 'react-router-dom';\n\nconst Login = ({ location, history }) => {\n    const Header = {\n        title: 'aimmed App'\n    };\n    const item = menus[location.pathname];\n    return <Layout item={item} contents={<LoginContent />} />;\n};\n\nexport default withRouter(Login);\n"],"names":["useRef","useState","msg","setMsg","isLoading","setIsLoading","text","type","date","textList","setTextList","style","width","map","i","index","columns","gap","display","margin","src","fontWeight","maxWidth","overflowWrap","dangerouslySetInnerHTML","__html","align","moment","format","justifyContent","marginLeft","backgroundColor","fontSize","to","axis","magnetic","QuestionOutlined","onClick","Modal","title","content","onConfirm","document","location","href","confirmText","cancelText","UserContactOutline","color","className","padding","placeholder","rows","autoSize","minRows","maxRows","minHeight","overflowY","value","onChange","e","size","borderRadius","tmpMsgList","setTimeout","withRouter","item","history","menus","pathname","contents"],"sourceRoot":""}