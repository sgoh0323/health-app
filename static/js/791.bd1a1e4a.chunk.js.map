{"version":3,"file":"static/js/791.bd1a1e4a.chunk.js","mappings":"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","sources":["api/partner/noticesApi.ts","components/customDownload/index.tsx","helper/recycle.ts","hooks/useLoding.ts","types/Common/NoticesOptions.ts"],"sourcesContent":["import { AnyParamType, CommonResult } from 'api/common/commonType';\nimport axios from 'axios';\nimport { Cookies } from 'react-cookie';\nimport service from '../request';\nimport {\n    Notice,\n    NoticeList,\n    Answer,\n    PatnerQuestions,\n    PatnerQuestion,\n    NoticeParam,\n    QuestionParam,\n    ReplyDeleteParam\n} from './noticesType';\n\nexport const getNotices = async (payload: NoticeParam, callback: (e: NoticeList) => void): Promise<void> => {\n    const { data } = await service.get<NoticeList>(`/board-api/cms/notices`, { params: payload });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const postNotices = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data } = await service({\n        url: `/board-api/cms/notices`,\n        method: 'post',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const getNotice = async (payload: number, callback: (e: Notice) => void): Promise<void> => {\n    const { data } = await service.get(`/board-api/cms/notices/${payload}`);\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const putNotice = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/notices`,\n        method: 'put',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const deleteNotice = async (payload: number, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/notices/${payload}`,\n        method: 'delete'\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const deleteNotices = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/notices`,\n        method: 'delete',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const postNoticesAnswer = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/notices/answer`,\n        method: 'post',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\nexport const getNoticeAnswer = async (payload: number, callback: (e: Answer) => void): Promise<void> => {\n    const { data } = await service.get(`/board-api/cms/notices/answer/${payload}`);\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const putNoticeAnswer = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/notices/answer`,\n        method: 'put',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\nexport const deleteNoticeAnswer = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    console.log('deleteNoticeAnswer');\n    console.log(payload);\n    const { data = null } = await service({\n        url: `/board-api/cms/notices/answer/${payload.articleIdx}/${payload.answerIdx}`,\n        method: 'delete'\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const apiExcelFileDownload = async (payload: AnyParamType): Promise<void> => {\n    await service\n        .get(\n            // `/board-api/cms/notices/excel?page=1&limit=30&searchDateType=0&startDate=2022-01-10&endDate=2022-03-12&noticeTarget=&isConfirm=1&isTopFix=&isUse=1&searchRegisterName=&searchWord=&noticeTargetIds=&targetIds=&userId=&noticeTarget=&isTopFix=&searchRegisterName=&searchWord=&noticeTargetIds=&targetIds=&userId=`,\n            payload.url,\n            { responseType: 'blob', params: payload.params }\n        )\n        .then(response => {\n            const url = window.URL.createObjectURL(\n                new Blob([response.data], { type: response.headers['content-type'] })\n            );\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', payload.fileName);\n            document.body.appendChild(link);\n            link.click();\n        });\n};\n/**\n-- 댓글 API\nboardType게시판 타입 (3 : 파트너 1:1문의 게시판, 0: 공지사항)\narticleAttachType 게시물 타입 필수 입니다.(1:1 파트너 문의사항: 3,게시글의 댓글 : 5 , 답글의 댓글 : 6)\narticleType 게시물 타입 (게시글의 댓글 : Q , 답글의 댓글 : A)\nreplyIdx 댓글의 id값\narticleIdx 게시물의 id값\nreplyContent 댓글 내용\nfiles파일 \n*/\n/*\n    -F 'files=@hello_notice_answer_article_Reply_01.txt;type=text/plain' \\\n    -F 'files=@hello_notice_answer_article_Reply_02.txt;type=text/plain' \\\n    -F 'boardType=0' \\\n    -F 'articleType=Q' \\\n    -F 'articleAttachType=5' \\\n    -F 'articleIdx=39' \\\n    -F 'replyLevel=0' \\\n    -F 'parentReplyIdx=null' \\\n    -F 'replyContent=39 게시글의 두번째 댓글의 대댓글 내용....!' \\\n    -F 'files=null'\n */\nexport const postReply = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/reply`,\n        method: 'post',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n/*\n    'boardType=0' \\\n    -F 'articleType=A' \\\n    -F 'articleAttachType=6' \\\n    -F 'replyIdx=92' \\\n    -F 'articleIdx=103' \\\n    -F 'replyContent=39 게시글의 103 답글 첫번째 댓글 내용....! 수정합니다....' \\\n    -F 'files=null'\n */\nexport const putReply = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/reply`,\n        method: 'PUT',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const deleteReply = async (payload: ReplyDeleteParam, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/reply`,\n        method: 'DELETE',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const getPatnerQuestions = async (\n    payload: QuestionParam,\n    callback: (e: PatnerQuestions) => void\n): Promise<void> => {\n    const { data = null } = await service.get(`/board-api/cms/partners/questions/`, { params: payload });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const getPatnerQuestion = async (payload: number, callback: (e: PatnerQuestion) => void): Promise<void> => {\n    const { data = null } = await service.get(`/board-api/cms/partners/questions/${payload}`);\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const postPatnerQuestions = async (\n    payload: AnyParamType,\n    callback: (e: CommonResult) => void\n): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/questions`,\n        method: 'post',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const putPatnerQuestions = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/questions`,\n        method: 'put',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const putPatnerQuestionsStatus = async (\n    payload: AnyParamType,\n    callback: (e: CommonResult) => void\n): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/questions/status`,\n        method: 'put',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\nexport const deletePatnerQuestion = async (payload: number, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/questions/${payload}`,\n        method: 'delete'\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const deletePatnerQuestions = async (\n    payload: AnyParamType,\n    callback: (e: CommonResult) => void\n): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/questions`,\n        method: 'delete',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const deletePatnerQnA = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/question-answer/${payload}`,\n        method: 'delete',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const postPatnerAnswers = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/answers`,\n        method: 'post',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const putPatnerAnswers = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/answers`,\n        method: 'put',\n        data: payload.data\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\nexport const deletePatnerAnswer = async (payload: number, callback: (e: CommonResult) => void): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/answers/${payload}`,\n        method: 'delete'\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\nexport const deletePatnerAnswers = async (\n    payload: AnyParamType,\n    callback: (e: CommonResult) => void\n): Promise<void> => {\n    const { data = null } = await service({\n        url: `/board-api/cms/partners/answers`,\n        method: 'delete',\n        data: payload\n    });\n    if (data !== null) {\n        callback(data);\n    }\n};\n\nexport const apiFileDownload = async (payload: AnyParamType, callback: (e: CommonResult) => void): Promise<void> => {\n    await service\n        .get(`/board-api/cms/files/download`, { params: { idx: payload.idx }, responseType: 'blob' })\n        .then(response => {\n            const url = window.URL.createObjectURL(\n                new Blob([response.data], { type: response.headers['content-type'] })\n            );\n            const link = document.createElement('a');\n            link.href = url;\n            link.setAttribute('download', payload.fileName);\n            document.body.appendChild(link);\n            link.click();\n        });\n};\n","/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { Upload, Button, Image, Row } from 'antd';\nimport { DeleteOutlined, DownloadOutlined } from '@ant-design/icons';\nimport modal from 'helper/customModal';\nimport { uniqueId } from 'lodash';\nimport useLoding from 'hooks/useLoding';\nimport { apiFileDownload } from 'api/common/commonApi';\n\nexport type FormLayout = 'horizontal' | 'inline' | 'preview';\n\ninterface CustomDownloadProps {\n    downloadFiles: any[];\n    setDownloadFiles?: (e) => void;\n    readonly?: boolean;\n}\n\nconst CustomDownload: React.FunctionComponent<CustomDownloadProps> = props => {\n    const { downloadFiles, setDownloadFiles, readonly } = props;\n    const { setLoading } = useLoding();\n    const onRemove = file => {\n        const index = downloadFiles.indexOf(file);\n        const newFileList = downloadFiles.slice();\n        newFileList.splice(index, 1);\n        setDownloadFiles(newFileList);\n    };\n    useEffect(() => {\n        return () => {\n            //\n        };\n    }, [downloadFiles]);\n\n    return (\n        <div style={{ marginBottom: '5px' }}>\n            {downloadFiles &&\n                downloadFiles.length > 0 &&\n                downloadFiles.map(item => {\n                    return (\n                        <Row\n                            key={uniqueId()}\n                            style={{\n                                display: 'inline-flex',\n                                border: '1px solid #e0e0e0',\n                                padding: '4px 10px',\n                                marginTop: '5px',\n                                marginRight: '5px',\n                                fontSize: '14px'\n                            }}\n                            align=\"middle\"\n                            title={item.fileName}>\n                            <DownloadOutlined />\n                            <div\n                                style={{\n                                    width: `119px`,\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    whiteSpace: 'nowrap',\n                                    cursor: 'pointer',\n                                    marginLeft: '5px'\n                                }}\n                                onClick={() => {\n                                    setLoading(apiFileDownload({ idx: item.idx, fileName: item.fileName }));\n                                }}>\n                                {item.fileName}\n                            </div>\n                            {readonly === undefined && (\n                                <div\n                                    style={{ width: `20px`, cursor: 'pointer' }}\n                                    onClick={() => {\n                                        onRemove(item);\n                                    }}>\n                                    <DeleteOutlined size={20} />\n                                </div>\n                            )}\n                        </Row>\n                    );\n                })}\n        </div>\n    );\n};\n\nexport default CustomDownload;\n","import { ValueFormatterParams } from 'ag-grid-community';\nimport { CommonOptionType } from 'api/common/commonType';\nimport moment, { Moment } from 'moment';\n\nexport const numberWithCommas = (arg: number): string => {\n    return arg !== undefined && arg ? arg.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') : '0';\n};\nexport const numberDecimal = (arg: number, rule: number): number => {\n    if (arg.toString().indexOf('.') !== -1) {\n        return Number(arg.toFixed(rule));\n    }\n    return arg;\n};\nexport const toUnderCase = (arg: string): string => {\n    const result = arg.replace(/[A-Z]/g, (upp, i, st) => {\n        if (i === 0) {\n            return upp.toLowerCase();\n        }\n        return `_${upp.toLowerCase()}`;\n    });\n    return result;\n};\nexport const defaultDateFormat = (arg: string): string => {\n    return arg !== undefined && arg ? moment(arg).format('YYYY.MM.DD') : '';\n};\n\nexport const formatDate = (date: Moment | string): string =>\n    (typeof date === 'string' ? moment(date) : date).format('yyyy-MM-DD');\n\nexport const isUsedFormatter = (params: ValueFormatterParams): string => (params.value ? '사용' : '사용안함');\n\nexport const dateFormatter = (params: ValueFormatterParams): string => formatDate(params.value);\n\nexport const enumToOptions = (arg: any): { label: string; value: any }[] => {\n    const rsOptions = [];\n    Object.keys(arg).map(name => {\n        return rsOptions.push({ label: name, value: arg[name] });\n    });\n    return rsOptions;\n};\n\nexport const getOptionValue = (arg, value) => {\n    return arg.filter(item => item.value === value).length > 0 ? arg.filter(item => item.value === value)[0].label : '';\n};\n\nexport const emptyString = arg => {\n    return arg === undefined || arg === null ? '' : arg;\n};\n\nexport const mapDatesToRange = (sources: string[], target: string) => item => {\n    const start = item[sources[0]] || moment();\n    const end = item[sources[1]] || moment();\n    return { ...item, [target]: [moment(start), moment(end)] };\n};\n\nexport const dataToOptions = (arg: any[], labelKey: string, valueKey: string): CommonOptionType[] => {\n    const rsOptions = [];\n    arg.map(item => {\n        return rsOptions.push({ label: item[labelKey], value: item[valueKey] });\n    });\n    return rsOptions;\n};\n","import moment from 'moment';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setApiCallIds, removeApiCallIds, setLoading as isLoading } from 'stores/common';\n\nexport const useLoding = (): any => {\n    const dispatch = useDispatch();\n\n    const setLoading = useCallback(\n        async payload => {\n            const id = moment().valueOf();\n            dispatch(setApiCallIds(id));\n            try {\n                await payload;\n            } finally {\n                dispatch(removeApiCallIds(id));\n            }\n        },\n        [dispatch]\n    );\n\n    const setForceLoading = useCallback(\n        async payload => {\n            dispatch(isLoading(payload));\n        },\n        [dispatch]\n    );\n\n    return {\n        setLoading,\n        setForceLoading\n    };\n};\n\nexport default useLoding;\n","export const targetsOptions = [\n    { label: '모든공지사항', value: 0 },\n    { label: '모든힙합퍼', value: 1 },\n    { label: '모든파트너', value: 2 },\n    { label: '특정파트너', value: 3 }\n];\nexport const confirmOptions = [\n    { label: '필수', value: 1 },\n    { label: '필수아님', value: 0 }\n];\n// export const topFixOptions = [\n//     { label: '고정함', value: 1 },\n//     { label: '고정 안함', value: 0 }\n// ];\nexport const useOptions = [\n    { label: '노출', value: 1 },\n    { label: '노출 안함', value: 0 }\n];\nexport const topFixOptions = [\n    { label: '전체', value: 'all' },\n    { label: '고정', value: 1 },\n    { label: '고정 안함', value: 0 }\n];\nexport const dateTypeOptions = [\n    { label: '등록일', value: 0 },\n    { label: '최종수정일', value: 1 }\n];\n\nexport const searchOptions = [\n    { label: '제목', value: 0 },\n    { label: '등록자명', value: 1 },\n    { label: '최종수정자명', value: 2 }\n];\n\n// 1:1문의\nexport const directDateTypeOptions = [\n    { label: '등록일', value: 0 },\n    { label: '최종답변일', value: 1 }\n];\n\nexport const directTargetsOptions = [\n    { label: '전체', value: 0 },\n    { label: 'MD', value: 1 }\n];\nexport const directSearchOptions = [\n    { label: '문의업체명', value: 0 },\n    { label: '최종답변자', value: 1 },\n    { label: '내용', value: 2 }\n];\nexport const statusOptions = [\n    { label: '전체', value: 999 },\n    { label: '답변대기', value: 100 },\n    { label: '답변준비', value: 500 },\n    { label: '답변완료', value: 200 }\n];\n\n// 관리자 조회 옵션\nexport const managerUserTypeOptions = [\n    { label: '전체', value: 'all' },\n    { label: '힙합퍼', value: 0 },\n    { label: '파트너', value: 1 }\n];\nexport const managerSearchOptions = [\n    { label: '이름', value: 0 },\n    { label: '아이디', value: 1 }\n];\n\n// 고객 상품문의\nexport const productInquiryQuestionTypeOptions = [\n    { label: '전체', value: 999 },\n    { label: '상품 문의', value: 100 },\n    { label: '재입고 문의', value: 200 },\n    { label: '사이즈 문의', value: 300 },\n    { label: '배송 문의', value: 400 },\n    { label: '기타', value: 500 }\n];\n\nexport const productInquirySearchTypeOptions = [\n    { label: '문의자명', value: 0 },\n    { label: '문의자ID', value: 1 },\n    { label: '상품코드', value: 2 },\n    { label: '내용', value: 3 },\n    { label: '최초답변자명', value: 4 },\n    { label: '최종답변자명', value: 5 }\n];\n\nexport const productInquiryDateTypeOptions = [\n    { label: '문의등록일', value: 0 },\n    { label: '최초답변일', value: 1 },\n    { label: '최종수정일', value: 2 }\n];\n\nexport const productInquiryStatusOptions = [\n    { label: '전체', value: 999 },\n    { label: '답변대기', value: 100 },\n    { label: '답변완료', value: 200 },\n    { label: '답변준비', value: 500 }\n];\n"],"names":["getNotices","payload","callback","service","params","data","postNotices","url","method","getNotice","putNotice","deleteNotice","deleteNotices","getNoticeAnswer","deleteNoticeAnswer","console","log","articleIdx","answerIdx","apiExcelFileDownload","responseType","then","response","window","URL","createObjectURL","Blob","type","headers","link","document","createElement","href","setAttribute","fileName","body","appendChild","click","deleteReply","getPatnerQuestions","getPatnerQuestion","putPatnerQuestionsStatus","postPatnerAnswers","putPatnerAnswers","deletePatnerAnswer","deletePatnerAnswers","props","downloadFiles","setDownloadFiles","readonly","setLoading","useLoding","useEffect","style","marginBottom","length","map","item","display","border","padding","marginTop","marginRight","fontSize","align","title","width","overflow","textOverflow","whiteSpace","cursor","marginLeft","onClick","apiFileDownload","idx","undefined","file","index","indexOf","newFileList","slice","splice","onRemove","size","uniqueId","numberWithCommas","arg","toString","replace","emptyString","dispatch","useDispatch","useCallback","id","moment","valueOf","setApiCallIds","removeApiCallIds","setForceLoading","isLoading","targetsOptions","label","value","confirmOptions","useOptions","topFixOptions","dateTypeOptions","searchOptions","directDateTypeOptions","directTargetsOptions","directSearchOptions","statusOptions","managerUserTypeOptions","managerSearchOptions"],"sourceRoot":""}