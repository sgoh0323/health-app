{"version":3,"file":"static/js/484.5953ea25.chunk.js","mappings":"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","sources":["../node_modules/@ant-design/icons-svg/es/asn/LeftOutlined.js","../node_modules/@ant-design/icons/es/icons/LeftOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/RightOutlined.js","../node_modules/@ant-design/icons/es/icons/RightOutlined.js","pages/exam/index.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar LeftOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M724 218.3V141c0-6.7-7.7-10.4-12.9-6.3L260.3 486.8a31.86 31.86 0 000 50.3l450.8 352.1c5.3 4.1 12.9.4 12.9-6.3v-77.3c0-4.9-2.3-9.6-6.1-12.6l-360-281 360-281.1c3.8-3 6.1-7.7 6.1-12.6z\" } }] }, \"name\": \"left\", \"theme\": \"outlined\" };\nexport default LeftOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport LeftOutlinedSvg from \"@ant-design/icons-svg/es/asn/LeftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar LeftOutlined = function LeftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: LeftOutlinedSvg\n  }));\n};\n\nLeftOutlined.displayName = 'LeftOutlined';\nexport default /*#__PURE__*/React.forwardRef(LeftOutlined);","// This icon file is generated automatically.\nvar RightOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M765.7 486.8L314.9 134.7A7.97 7.97 0 00302 141v77.3c0 4.9 2.3 9.6 6.1 12.6l360 281.1-360 281.1c-3.9 3-6.1 7.7-6.1 12.6V883c0 6.7 7.7 10.4 12.9 6.3l450.8-352.1a31.96 31.96 0 000-50.4z\" } }] }, \"name\": \"right\", \"theme\": \"outlined\" };\nexport default RightOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport RightOutlinedSvg from \"@ant-design/icons-svg/es/asn/RightOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar RightOutlined = function RightOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: RightOutlinedSvg\n  }));\n};\n\nRightOutlined.displayName = 'RightOutlined';\nexport default /*#__PURE__*/React.forwardRef(RightOutlined);","import { CheckCircleFilled, LeftOutlined, RightOutlined } from '@ant-design/icons';\nimport {\n    Avatar,\n    Button,\n    Card,\n    Space,\n    TextArea,\n    Grid,\n    DotLoading,\n    AutoCenter,\n    Steps,\n    Divider,\n    Form,\n    Input,\n    Checkbox\n} from 'antd-mobile';\nimport Layout from 'layout';\nimport React, { useRef, useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { menus } from 'router/menu';\n\nconst Exam = ({ location, history }) => {\n    const scrollViewRef = useRef(null);\n    const [form] = Form.useForm();\n    const item = menus[location.pathname];\n    const [examList, setExamList] = useState([\n        {\n            key: 0,\n            q_title: '체질량 지수',\n            q_subTitle: '신장과 체중을 입력하여 주시기 바랍니다.',\n            a_list: [\n                { type: 'input', label: '신장', tail_label: 'cm', name: 'tall', inputType: 'number', idx: 0 },\n                { type: 'input', label: '체중', tail_label: 'kg', name: 'weight', inputType: 'number', idx: 0 }\n            ]\n        },\n        {\n            key: 1,\n            q_title: '진단질환',\n            q_subTitle: '진단받은 질환을 선택하세요',\n            a_list: [\n                {\n                    type: 'checkbox',\n                    name: 'meal',\n                    multiable: true,\n                    options: [\n                        { label: '당뇨병', value: 1 },\n                        { label: '고혈압', value: 2 },\n                        { label: '고지혈증', value: 3 },\n                        { label: '비만', value: 4 },\n                        { label: '해당사항없음', value: 0 }\n                    ]\n                }\n            ],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        ,\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [{ type: 'checkbox', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }],\n            idx: 2\n        },\n        {\n            key: 1,\n            q_title: '식습관',\n            q_subTitle: '본인의 식습관에 해당되는 내용을 모두 체크해 주세요.',\n            a_list: [\n                { type: 'checkbox', label: '', name: 'meal', multiable: true, options: [{ label: '식사', value: 1 }] }\n            ],\n            idx: 2\n        }\n    ]);\n    const [text, setText] = useState('');\n    const [current, setCurrent] = useState({\n        key: 1,\n        q_title: '진단질환',\n        q_subTitle: '진단받은 질환을 선택하세요',\n        a_list: [\n            {\n                type: 'checkbox',\n                name: 'meal',\n                multiable: true,\n                options: [\n                    { label: '당뇨병', value: 1 },\n                    { label: '고혈압', value: 2 },\n                    { label: '고지혈증', value: 3 },\n                    { label: '비만', value: 4 },\n                    { label: '해당사항없음', value: 0 }\n                ]\n            }\n        ],\n        idx: 2\n    });\n    return (\n        <Layout\n            item={item}\n            contents={\n                <>\n                    <div style={{ textAlign: 'center' }}>\n                        모든항목을 빠짐없이 입력할수록\n                        <br /> 보다 정확한 분석 결과를 받으실수 있습니다.\n                    </div>\n                    <Steps current={current.key}>\n                        {examList.map((i, index) => {\n                            // return <Steps.Step icon={index === current ? <CheckCircleFilled /> : undefined} />;\n                            return <Steps.Step />;\n                        })}\n                    </Steps>\n                    <Card>\n                        <AutoCenter>\n                            <div>{current.q_title}</div>\n                        </AutoCenter>\n                        <AutoCenter>\n                            <div>{current.q_subTitle}</div>\n                        </AutoCenter>\n                        <Divider />\n                        <Form form={form}>\n                            <div>\n                                {current.a_list.length > 0 &&\n                                    current.a_list.map(i => {\n                                        const rsElement = el => {\n                                            if (el.type === 'input') {\n                                                return (\n                                                    <Form.Item\n                                                        name={el.name}\n                                                        label={el.label}\n                                                        rules={[\n                                                            {\n                                                                required: true\n                                                            }\n                                                        ]}>\n                                                        <Input />\n                                                    </Form.Item>\n                                                );\n                                            } else if (el.type === 'checkbox') {\n                                                return (\n                                                    <Form.Item\n                                                        name={el.name}\n                                                        label={el.label}\n                                                        rules={[\n                                                            {\n                                                                required: true\n                                                            }\n                                                        ]}>\n                                                        <Checkbox.Group>\n                                                            <Space direction=\"vertical\">\n                                                                {el.options.map(e => {\n                                                                    return (\n                                                                        <Checkbox value={e.value}>{e.label} </Checkbox>\n                                                                    );\n                                                                })}\n                                                            </Space>\n                                                        </Checkbox.Group>\n                                                    </Form.Item>\n                                                );\n                                            }\n                                        };\n                                        return rsElement(i);\n                                    })}\n                            </div>\n                        </Form>\n                    </Card>\n                    <Space justify=\"between\" style={{ width: '100%', marginTop: '10px' }}>\n                        <Button>\n                            <LeftOutlined />\n                            이전\n                        </Button>\n                        <Button>\n                            다음\n                            <RightOutlined />\n                        </Button>\n                    </Space>\n                </>\n            }\n        />\n    );\n};\n\nexport default withRouter(Exam);\n"],"names":["LeftOutlined","props","ref","React","AntdIcon","_objectSpread","icon","LeftOutlinedSvg","displayName","RightOutlined","RightOutlinedSvg","withRouter","location","history","useRef","Form","form","item","menus","pathname","useState","key","q_title","q_subTitle","a_list","type","label","tail_label","name","inputType","idx","multiable","options","value","examList","current","contents","style","textAlign","map","i","index","Step","length","el","rules","required","direction","e","justify","width","marginTop"],"sourceRoot":""}